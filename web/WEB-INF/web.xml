<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app PUBLIC
	"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
	"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

	<display-name>Broker Administrator</display-name>

	<description>The Broker Administrator Console</description>

	<!-- web app root key param -->		
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>badmin.root</param-value>
	</context-param>
	
	<!-- COMIENZO DE DEFINICION SPRING -->

	  <!--
	  - Location of the Log4J config file, for initialization and refresh checks.
	  - Applied by Log4jConfigListener.
	  -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>WEB-INF/log4j.xml</param-value>
	</context-param>

	<!--

	  - Location of the XML file that defines the root application context.
	  - Applied by ContextLoaderServlet.
		-
		- Can include "/WEB-INF/dataAccessContext-local.xml" for a single-database
		- context, or "/WEB-INF/dataAccessContext-jta.xml" for a two-database context.
	  -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/brokeradmin-config.xml
		</param-value>
	</context-param>
	
	<!-- log4j Listener Configurer
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
		-->
		
	<!--
	  - Loads the root application context of this web app at startup,
	  - by default from "/WEB-INF/applicationContext.xml".
		- Note that it is preferable to use ContextLoaderListener in a servlet container
		- that follows the Servlet 2.4 initialization order (most Servlet 2.3 containers do).
		-
	  - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
	  - to access it anywhere in the web application, outside of the framework.
	  -
	  - The root context is the parent of all servlet-specific contexts.
	  - This means that its beans are automatically available in these child contexts,
	  - both for getBean(name) calls and (external) bean references.
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
		
	<!--
	  - Spring web MVC servlet that dispatches requests to registered handlers.
	  - Has its own application context, by default defined in "{servlet-name}-servlet.xml",
	  - i.e. "petstore-servlet.xml" in this case.
	  -
	  - A web app can contain any number of such servlets.
	  - Note that this web app has a shared root application context, serving as parent
	  - of all DispatcherServlet contexts.
	  -->
	<servlet>
		<servlet-name>brokeradmin</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<!--
	- Dispatcher servlet mapping for the main web user interface.
	- Either refering to "petstore" for the Spring web MVC dispatcher,
	- or to "action" for the Struts dispatcher.
	-
	- Simply comment out the "petstore" reference in favour of "action"
	- to switch from the Spring web tier to the Struts web tier.
	-->
	<servlet-mapping>
		<servlet-name>brokeradmin</servlet-name>
		<url-pattern>/main/*</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>brokeradmin.html</welcome-file>
	</welcome-file-list>
	
	<!-- Referencia al Data Source 
	<resource-ref>
		<res-ref-name>jdbc/as400DS</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	-->

</web-app>
		